import Canvas3DDrawer from"./canvas3DDrawer";import Palette from"./palette";import Color from"./color";import Complex from"./complex";export default class JuliaGLDrawer{constructor(t){this._me=this,this._drawer=new Canvas3DDrawer(t),this._width=this._drawer.getWidth(),this._height=this._drawer.getHeight(),this._iteration=200,this._palette=new Palette,this._c=new Complex(-.85,.2),this._previousConstant=new Complex(1,1),this._degA=0,this._degB=0,this._animateFlag=!1,this._subscriberList=[]}getConstant(){return this._c}setConstant(t,s){this._c.a=t,this._c.b=s}createPalette(t,s,e,i){for(var a=1,r=[],h=arguments.length;a<h;++a)r.push(arguments[a]);this._palette.create(t,r)}initGL(){this._drawer.loadShaders(["assets/shaders/vs/basic.essl","assets/shaders/fs/julia.essl"]),this._drawer.setShaderProgram(0,1),this._drawer.addMesh(this._drawer.getQuad()),this._drawer.setPalette(this._palette.toUint8Array())}animate(){this._degA+=.01,this._degB+=.001,this.setConstant(Math.cos(this._degA),Math.sin(this._degB))}setAnimate=function(t){this._degA=Math.acos(this._c.a),this._degB=Math.asin(this._c.b),this._animateFlag=t};start(){console.log("start");var t=new Color(0,0,0,255,0),s=new Color(0,0,255,255,20),e=new Color(0,255,255,255,40),i=new Color(255,255,0,255,60),a=new Color(255,0,0,255,80),r=new Color(0,0,0,255,100);this.createPalette(1024,t,s,e,i,a,r),this.initGL(),this.draw()}draw(t,s){console.log("draw"),_animateFlag&&this.animate(),null!=t&&null!=s&&(this._c=new Complex(t,s)),this._previousConstant.isEquals(this._c)||(this._previousConstant.copy(this._c),this._drawer.setUniformFloat("uConst",this._c.a,this._c.b),this._drawer.setUniformInteger("uMaxIter",this._iteration),this._drawer.draw(),this.notify(this._c)),requestAnimFrame((function(){this.draw()}))}notify(t){for(var s=this._subscriberList.length;s;)s-=1,this._subscriberList[s](t.a,t.b)}subscribe(t){this._subscriberList.push(t)}}